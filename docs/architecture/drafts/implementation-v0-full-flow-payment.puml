@startuml
skinparam nodesep 10
skinparam ranksep 10
skinparam swimlane {
  BorderThickness 2
  TitleFontColor black
  TitleFontSize 20
  width 30
}

|PSU|
:Pay 100EUR to MySuperInternetStore;
|FinTech with OpenBankingGw API|
:{{
database "Dynamic KB\n(i.e. consent id)" as DKB
component "FinTech KB adapter" as FKBA
DKB ==> FKBA
}};
-> Perform payment - call\n**PUT /payment/{bankId}**;
|#AntiqueWhite|TPP with OpenBankingGw Impl|
:{{
database "Static KB\n(i.e. bank profile)" as SKB
database "Dynamic KB\n(i.e. Client billing address)" as DKB
component "<size:30><&spreadsheet></size>Request context knowledge" as knowledge
DKB ==> knowledge
SKB ==> knowledge
}};
:{{
component "<size:30><&cog></size> Request validation engine\n(mock that validates if\nall params are present)" as mockEngine
component "<size:30><&fork></size>ASPSP mock endpoints with\nrequest definition" as ASPSPMock
mockEngine <=left=> ASPSPMock : Mock requests
}};
|BPMN Engine inside TPP|
:{{
autonumber "<b><color blue>[00]"
header
<font color=red>Same flow as below (Perform payment)</font>
endheader
TPP -> "(MOCK) ASPSP" ++ : Payment initiation request
return Payment initiation response
TPP -> "(MOCK) ASPSP" ++ : Payment status request
return Payment status response
}};
|TPP with OpenBankingGw Impl|
if (<size:14>Not all required parameters</size>\n<size:14>are present?</size>) then (YES)
|FinTech with OpenBankingGw API|
:Handle not all parameters are available;
stop
else (NO - ALL PRESENT)
|TPP with OpenBankingGw Impl|
:{{
component "<size:30><&cog></size>Request performing engine (<b><&cog>RPE</b>)" as engine
}};
endif
|#AntiqueWhite|BPMN Engine inside TPP|
:{{
autonumber "<b><color blue>[00]"
header
<font color=red>Perform payment</font>
endheader
TPP -> ASPSP ++ : Payment initiation request
return Payment initiation response
loop SCA Authorization
  ASPSP -> PSU : SCA challenge
  PSU -> ASPSP : Challenge result
end
TPP -> ASPSP ++ : Payment status request
return Payment status response
}};
-> Call sequence to perform payment on behalf of <b>TPP</b>;
|ASPSP|
:Initiate payment;
note right
  Generated by <&cog>RPE
end note
|BPMN Engine inside TPP|
:Initiate payment response;
|ASPSP|
:Start SCA;
|PSU|
:Perform SCA challenge;
|ASPSP|
:Challenge done;
|BPMN Engine inside TPP|
:Challenge done;
|ASPSP|
:Payment status request;
note right
  Generated by <&cog>RPE
end note
|BPMN Engine inside TPP|
:Payment status response;
|TPP with OpenBankingGw Impl|
:Payment done;
|FinTech with OpenBankingGw API|
:Payment done;
stop
@enduml